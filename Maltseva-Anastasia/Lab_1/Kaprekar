def Сonverting(value, base):
    mod = ''
    k = 0
    while value > 0:
        mod += str(value%base)
        value = value//base
    if len(set(mod)) == 1:
        mod = '0' + mod
    else: mod = mod[::-1]
    return mod

def Verify (value, base):
    min = int(''.join(sorted(list(value))), base)
    max = int(''.join(sorted(list(value))[::-1]), base)
    differ = max - min
    rem = Сonverting(differ, base)
    return rem

def Kaprekar(sequence, digit, radix, result):
    import os
    rem = ''
    flag = False
    help = 0
    seq = []
    flag = False
    for base in range(2, radix+1): 
        for value in sequence:
            if flag == True : 
                flag = False 
                break
            v = value
            rem = ''
            while value > 0:
              rem += str(value % base)
              value //= base
            seq = [rem]
            i = 1
            while ...:
                res = Verify(seq[i-1], base)
                if res == '': res = '0'
                if res in seq and res != seq[i-1]:
                    break
                if len(res) > 6: 
                    flag = True
                    break
                if res == seq[i - 1] and len(res) <= 6:
                    if res not in result[base-2]: 
                        result[base-2].append(res)
                    break
                seq += [res]
                i += 1
        seq = []
        print()
    return result
            
def main():
    import os
    max_digit = 6
    max_radix = 10
    seq = []
    res = [['0' for i in range(1)] for i in range(max_radix-1)]
    for i in range(10**max_digit):
        seq.append(i+1)
    res = Kaprekar(seq, max_digit, max_radix, res)
    f = open('result.txt', 'w')
    for i in range(max_radix-1):
        f.write(str(i+2)+'-ая система счисления:\n')
        for j in range(6):
            f.write(' '+str(j+1)+': ')
            for k in range(len(res[i])):
                if len(res[i][k]) == j+1:
                    f.write(res[i][k]+' ')
            f.write('\n')
        f.write('\n')
    f.close()

main()
        

